class Mapmanager:
    """Класс для управления картой"""

    def __init__(self, game):
        self.game = game
        self.model = "block.egg"
        self.texture = self.game.loader.loadTexture("block.png")
        self.colors = [
            (0.2, 0.2, 0.35, 1),
            (0.2, 0.5, 0.2, 1),
            (0.7, 0.2, 0.2, 1),
            (0.5, 0.3, 0.0, 1)
        ]  # rgba

        self.startNew()  # создание основного узла карты

    def startNew(self):
        self.land = self.game.render.attachNewNode("Land")

    def addBlock(self, position):
        self.block = self.game.loader.loadModel(self.model)
        self.block.setTexture(self.texture)
        self.color = self.getColor(position[2])
        self.block.setColor(self.color)
        self.block.setPos(position)
        self.block.reparentTo(self.land)

    def getColor(self, z):
        if z < len(self.colors):
            return self.colors[z]
        else:
            return self.colors[len(self.colors) - 1]

    def clear(self):
        self.land.removeNode()
        self.startNew()

    def loadLand(self, filename):
        self.clear()
        with open(filename) as f:
            y = 0
            for line in f:
                x = 0
                line = line.split(" ")
                for _z in line:
                    for z in range(int(_z) + 1):
                        self.addBlock((x, y, z))
                    x += 1
                y += 1
