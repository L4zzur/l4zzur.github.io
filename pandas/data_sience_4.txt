import pandas as pd
df = pd.read_csv('GoogleApps.csv')

#? 1 Выведи на экран минимальный, средний и максимальный рейтинг ('Rating') платных и бесплатных приложений ('Type') с точностью до десятых.
temp = df.groupby(by="Type")["Rating"].agg(["min", "mean", "max"])
print(round(temp, 1))
###* Задание 1
#! free_min 1.0 free_mean 4.2 free_max 5.0
#! paid_min 1.0 paid_mean 4.2 paid_max 5.0


#? 2 Выведи на экран минимальную, медианную (median) и максимальную цену ('Price') платных приложений (Type == 'Paid') для 
#? разных целевых аудиторий ('Content Rating')
temp = df[df["Type"] == "Paid"].groupby(by="Content Rating")["Price"].agg(["min", "median", "max"])
print(temp)
#! Миним. цена платных приложений для всех целевых аудиторий одинаковая
#! В категории Everyone максим. цена самая большая среди всей целевой аудитории
#! В категории Teen медианная цена самая большая среди всей целевой аудитории

#? 3 Сгруппируй данные по категории ('Category') и целевой аудитории ('Content Rating') любым удобным для тебя способом
#? посчитай максимальное количество отзывов ('Reviews') в каждой группе.
#? Сравни результаты для категорий 'EDUCATION', 'FAMILY' и 'GAME':
#? В какой возрастной группе больше всего отзывов получило приложение из категории 'EDUCATION'? 'FAMILY'? 'GAME'?
#? Подсказка: ты можешь выбрать из DataFrame несколько столбцов одновременно с помощью такого синтаксиса:
#? df[[<столбец 1>, <столбец 2>, <столбец 3>]]
temp = df.pivot_table(index="Content Rating", columns="Category", values="Reviews", aggfunc="max")
print(temp[["EDUCATION", "FAMILY", "GAME"]])
#! 1. Education
#! 2. Everyone 10+
#! 3. Everyone 10+

# 4 Сгруппируй платные (Type == 'Paid') приложения по категории ('Category') и целевой аудитории ('Content Rating')
# Посчитай среднее количество отзывов ('Reviews') в каждой группе
# Обрати внимание, что в некоторых ячейках полученной таблицы отражается не число, а значение "NaN" - Not a Number
# Эта запись означает, что в данной группе нет ни одного приложения.
# Выбери названия категорий, в которых есть платные приложения для всех возрастных групп и расположи их в алфавитном порядке.

# Бонусная задача. Найди категории бесплатных (Type == 'Free') приложений, 
# в которых приложения разработаны не для всех возрастных групп ('Content Rating')
